# import hashlib
# import sys

# from Config import yaml
from Utils.logs import logging as syslog
import hashlib 

#Defining the buff size used for file operations
BUFF_SIZE = 65536

def getFilesHash(logs_path: list):

    # Checking if logs+path passed into function is of type: list
    if isinstance(logs_path, list):

        # Creating an empty list to append hashes generated by this function later on

        list_of_hashes = []

        # Iterating through each log in logs_path
        for logs in logs_path:

             # Re-initalizing hash for use in the script
            hasher = hashlib.sha256()

            # opening up each log
            with open(logs, "rb") as f:

                while True:
                    
                    # Reading data according to BUFF_SIZE
                    data = f.read(BUFF_SIZE)

                    if not data:

                        break
                    
                    # data the hash stored in hasher Object
                    hasher.update(data)
                
                list_of_hashes.append(hasher.hexdigest())
            
        return list_of_hashes
    
    elif logs_path is None:

        syslog.critical("No valid paths listed in YAML Config")

def getListOfHashes(files):

    getFilesHash(files)